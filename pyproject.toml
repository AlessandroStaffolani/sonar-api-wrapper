[project]
name = "sonar-api-wrapper"
description = "Sonar API Wrapper - a Sonarqube api wrapper"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Alessandro Staffolani", email = "alestam93@gmail.com"},
]
keywords = ["sonar", "sonarqube"]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "requests",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/AlessandroStaffolani/sonar-api-wrapper"
Repository = "https://github.com/AlessandroStaffolani/sonar-api-wrapper.git"

[project.optional-dependencies]
dev = [
    "coverage[toml]",
    "pytest",
    "pytest-cov",
    "build",
    "twine"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "sonar_api_wrapper/__version__.py"

[tool.pytest.ini_options]
addopts = "--cov --cov-report xml:coverage.xml --cov-report term --junit-xml=coverage-report.xml --cov-report html:coverage.html -v -r A"
log_level = "DEBUG"
testpaths = [
    "./tests",
]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
omit = [
    "tests/*",
]

[tool.coverage.run]
source_pkgs = [
    "sonar_api_wrapper",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, py312
skip_missing_interpreters = true
minversion = 4.15.0

[testenv]
description = run the tests with pytest under {envname}
package = wheel
extras =
    dev
deps =
    pytest
    coverage[toml]
    pytest-cov
commands =
    pytest {posargs: --junit-xml={toxworkdir}{/}junit.{envname}.xml --cov-report html:{envtmpdir}{/}htmlcov --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml}

[coverage:run]
relative_files = True
"""
